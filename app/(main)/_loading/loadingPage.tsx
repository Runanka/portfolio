"use client";

import Image from "next/image";
import { use, useEffect, useState, SVGProps } from "react";

import {
  AnimatePresence,
  animate,
  motion,
  useAnimate,
  useMotionValue,
  useTransform,
} from "framer-motion";

import { interpolate } from "flubber";
import { SubTitleFont } from "../_components/fonts";
import HomePage from "../homePage/homePage";

const waveColors = ["#3E2723", "#D3BFA7", "#E5D4BA"];

export default function LoadingPage() {
  const [loading, setLoading] = useState(true);
  const [isAnimatingOut, setIsAnimatingOut] = useState(false);

  useEffect(() => {
    setTimeout(() => {
      setLoading(false);
    }, 5000);
  }, []);

  if (!loading) {
    return <HomePage />;
  }

  return (
    <AnimatePresence>
      {loading && (
        <motion.div
          className="z-50 fixed w-screen h-screen overflow-clip bg-[#F5F5DC] "
          key="loadingPage"
          exit={{ opacity: 0 }}
          transition={{ duration: 0.5, ease: "easeInOut", delay: 0.25 }}
        >
          <motion.div
            className="z-20 absolute flex w-full h-full justify-center items-center text-[#C68E17] "
            exit={{ opacity: 0 }}
            transition={{ duration: 0.5, ease: "easeInOut" }}
          >
            <SubTitleFont className="text-lg md:text-xl lg:text-2xl ml-2">
              CAFFEINATING
            </SubTitleFont>

            <Progress from={0} to={100} />
          </motion.div>
          <motion.div
            exit={{ opacity: 0 }}
            transition={{ duration: 0.5, ease: "easeInOut", delay: 0.25 }}
          >
            <motion.div
              className="z-10 absolute top-3/4 flex w-full h-full flex-col items-start"
              initial={{ y: "20%" }}
              animate={{ y: "-120%" }}
              transition={{ duration: 5, ease: "linear" }}
            >
              <SvgWaveComponent />
              <svg
                viewBox="0 10 1440 320"
                xmlns="http://www.w3.org/2000/svg"
                style={{ overflow: "visible" }}
              >
                <motion.rect
                  x="0"
                  y="0"
                  width="1440"
                  height="600vh"
                  fill={waveColors[0]}
                ></motion.rect>
              </svg>
            </motion.div>
          </motion.div>
        </motion.div>
      )}
    </AnimatePresence>
  );
}

const SvgWaveComponent = (props: SVGProps<SVGSVGElement>) => (
  <svg
    id="svg"
    viewBox="0 0 1440 390"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <style>
      {'.path-0{\n            animation:pathAnim-0 4s;\n            animation-timing-function: linear;\n            animation-iteration-count: infinite;\n          }\n          @keyframes pathAnim-0{\n            0%{\n              d: path("M 0,400 L 0,150 C 63.01538461538462,172.83333333333331 126.03076923076924,195.66666666666666 210,192 C 293.96923076923076,188.33333333333334 398.89230769230767,158.16666666666669 492,164 C 585.1076923076923,169.83333333333331 666.4000000000001,211.66666666666663 742,219 C 817.5999999999999,226.33333333333337 887.5076923076924,199.16666666666669 965,178 C 1042.4923076923076,156.83333333333331 1127.569230769231,141.66666666666666 1208,138 C 1288.430769230769,134.33333333333334 1364.2153846153847,142.16666666666669 1440,150 L 1440,400 L 0,400 Z");\n            }\n            25%{\n              d: path("M 0,400 L 0,150 C 98.90769230769229,167.83846153846153 197.81538461538457,185.67692307692306 276,184 C 354.1846153846154,182.32307692307694 411.6461538461539,161.13076923076923 476,159 C 540.3538461538461,156.86923076923077 611.6,173.8 692,175 C 772.4,176.2 861.9538461538464,161.66923076923075 946,156 C 1030.0461538461536,150.33076923076925 1108.5846153846153,153.52307692307693 1190,154 C 1271.4153846153847,154.47692307692307 1355.7076923076925,152.23846153846154 1440,150 L 1440,400 L 0,400 Z");\n            }\n            50%{\n              d: path("M 0,400 L 0,150 C 84.47435897435895,129.30769230769232 168.9487179487179,108.61538461538463 236,94 C 303.0512820512821,79.38461538461537 352.6794871794873,70.84615384615383 436,86 C 519.3205128205127,101.15384615384617 636.3333333333333,140 728,167 C 819.6666666666667,194 885.9871794871794,209.15384615384616 956,194 C 1026.0128205128206,178.84615384615384 1099.7179487179487,133.3846153846154 1181,121 C 1262.2820512820513,108.61538461538461 1351.1410256410256,129.30769230769232 1440,150 L 1440,400 L 0,400 Z");\n            }\n            75%{\n              d: path("M 0,400 L 0,150 C 77.78974358974361,123.56923076923077 155.57948717948722,97.13846153846154 239,105 C 322.4205128205128,112.86153846153846 411.4717948717948,155.0153846153846 497,181 C 582.5282051282052,206.9846153846154 664.5333333333333,216.80000000000004 729,200 C 793.4666666666667,183.19999999999996 840.3948717948718,139.7846153846154 925,116 C 1009.6051282051282,92.21538461538462 1131.8871794871793,88.06153846153846 1224,97 C 1316.1128205128207,105.93846153846154 1378.0564102564103,127.96923076923076 1440,150 L 1440,400 L 0,400 Z");\n            }\n            100%{\n              d: path("M 0,400 L 0,150 C 63.01538461538462,172.83333333333331 126.03076923076924,195.66666666666666 210,192 C 293.96923076923076,188.33333333333334 398.89230769230767,158.16666666666669 492,164 C 585.1076923076923,169.83333333333331 666.4000000000001,211.66666666666663 742,219 C 817.5999999999999,226.33333333333337 887.5076923076924,199.16666666666669 965,178 C 1042.4923076923076,156.83333333333331 1127.569230769231,141.66666666666666 1208,138 C 1288.430769230769,134.33333333333334 1364.2153846153847,142.16666666666669 1440,150 L 1440,400 L 0,400 Z");\n            }\n          }' +
        '.path-1{animation:pathAnim-1 5s; animation-timing-function: linear;animation-iteration-count: infinite;}@keyframes pathAnim-1{0%{d: path("M 0,500 L 0,250 C 102.53571428571428,217.14285714285714 205.07142857142856,184.28571428571429 321,183 C 436.92857142857144,181.71428571428571 566.2499999999999,212 700,244 C 833.7500000000001,276 971.9285714285716,309.71428571428572 1096,311 C 1220.0714285714284,312.28571428571428 1330.0357142857142,281.14285714285714 1440,250 L 1440,500 L 0,500 Z");}25%{d: path("M 0,500 L 0,250 C 125.67857142857142,258.60714285714286 251.35714285714283,267.21428571428572 356,251 C 460.64285714285717,234.78571428571428 544.25,193.74999999999997 658,194 C 771.75,194.25000000000003 915.6428571428571,235.7857142857143 1051,252 C 1186.357142857143,268.2142857142857 1313.1785714285716,259.10714285714283 1440,250 L 1440,500 L 0,500 Z");}50%{d: path("M 0,500 L 0,250 C 96.21428571428572,217.10714285714286 192.42857142857144,184.21428571428571 313,182 C 433.57142857142856,179.78571428571429 578.5,208.24999999999999 725,218 C 871.5,227.75000000000001 1019.5714285714287,218.78571428571428 1139,221 C 1258.4285714285713,223.21428571428572 1349.2142857142858,236.60714285714286 1440,250 L 1440,500 L 0,500 Z");}75%{d: path("M 0,500 L 0,250 C 135.92857142857144,245.03571428571428 271.8571428571429,240.07142857142856 393,228 C 514.1428571428571,215.92857142857143 620.5000000000001,196.74999999999999 743,196 C 865.4999999999999,195.25000000000001 1004.1428571428571,212.92857142857144 1123,225 C 1241.857142857143,237.07142857142856 1340.9285714285716,243.53571428571428 1440,250 L 1440,500 L 0,500 Z");}100%{d: path("M 0,500 L 0,250 C 102.53571428571428,217.14285714285714 205.07142857142856,184.28571428571429 321,183 C 436.92857142857144,181.71428571428571 566.2499999999999,212 700,244 C 833.7500000000001,276 971.9285714285716,309.71428571428572 1096,311 C 1220.0714285714284,312.28571428571428 1330.0357142857142,281.14285714285714 1440,250 L 1440,500 L 0,500 Z");}}'}
    </style>
    <g>
      <path
        d="M 0,400 L 0,150 C 102.53571428571428,117.14285714285714 205.07142857142856,84.28571428571429 321,83 C 436.92857142857144,81.71428571428571 566.2499999999999,112 700,144 C 833.7500000000001,176 971.9285714285716,209.71428571428572 1096,211 C 1220.0714285714284,212.28571428571428 1330.0357142857142,181.14285714285714 1440,150 L 1440,400 L 0,400 Z"
        stroke={waveColors[2]}
        strokeWidth="2"
        fill={waveColors[1]}
        className="transition-all duration-300 ease-in-out delay-150 path-0"
      />
      <path
        d="M 0,500 L 0,250 C 102.53571428571428,217.14285714285714 205.07142857142856,184.28571428571429 321,183 C 436.92857142857144,181.71428571428571 566.2499999999999,212 700,244 C 833.7500000000001,276 971.9285714285716,309.71428571428572 1096,311 C 1220.0714285714284,312.28571428571428 1330.0357142857142,281.14285714285714 1440,250 L 1440,500 L 0,500 Z"
        stroke="none"
        fill={waveColors[0]}
        className="transition-all duration-300 ease-in-out delay-150 path-1"
      />
    </g>
  </svg>
);

function Progress({ from, to }: { from: number; to: number }) {
  const [scope, animate] = useAnimate();

  useEffect(() => {
    const controls = animate(from, to, {
      duration: 3.5,
      ease: "linear",
      delay: 0.5,
      onUpdate: (latest) => {
        scope.current.textContent = `${Math.round(latest)}%`;
      },
    });

    return () => controls.stop();
  });

  return (
    <SubTitleFont>
      <span
        ref={scope}
        className="text-xl md:text-2xl lg:text-3xl w-8 inline-block m-2 text-right"
      />
    </SubTitleFont>
  );
}
